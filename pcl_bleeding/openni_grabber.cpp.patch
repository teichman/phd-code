--- openni_grabber.cpp.orig	2011-12-14 15:29:05.000000000 -0800
+++ openni_grabber.cpp	2011-12-14 15:43:59.000000000 -0800
@@ -48,6 +48,45 @@
 #include <boost/filesystem.hpp>
 #include <iostream>
 
+namespace ros
+{
+
+  void normalizeSecNSec(uint32_t& sec, uint32_t& nsec)
+  {
+    uint64_t sec64 = sec;
+    uint64_t nsec64 = nsec;
+
+    normalizeSecNSec(sec64, nsec64);
+
+    sec = (uint32_t)sec64;
+    nsec = (uint32_t)nsec64;
+  }
+
+  void normalizeSecNSec(uint64_t& sec, uint64_t& nsec)
+  {
+    uint64_t nsec_part = nsec % 1000000000UL;
+    uint64_t sec_part = nsec / 1000000000UL;
+
+    if (sec_part > UINT_MAX)
+      throw std::runtime_error("Time is out of dual 32-bit range");
+
+    sec += sec_part;
+    nsec = nsec_part;
+  }
+  
+  template<class T, class D>
+  T& TimeBase<T, D>::fromNSec(uint64_t t)
+  {
+    sec  = (int32_t)(t / 1000000000);
+    nsec = (int32_t)(t % 1000000000);
+
+    normalizeSecNSec(sec, nsec);
+
+    return *static_cast<T*>(this);
+  }
+
+}
+
 namespace pcl
 {
   typedef union
@@ -591,9 +630,7 @@
 
   boost::shared_ptr<pcl::PointCloud<pcl::PointXYZRGB> > cloud (new pcl::PointCloud<pcl::PointXYZRGB>);
 
-#ifndef USE_ROS
-  cloud->header.stamp = depth_image->getTimeStamp ();
-#endif
+  cloud->header.stamp.fromNSec(1000 * depth_image->getTimeStamp ());
   cloud->header.frame_id = rgb_frame_id_;
   cloud->height = depth_height_;
   cloud->width = depth_width_;
